[
["Interaction.html", "Chapter 12 Interaction–annotate, highlight, link, and animate 12.1 ggiraph: Simple annotation 12.2 ggiraph: Multi-plot linking with highlighting and annotation 12.3 plotly: annotation 12.4 plotly: Map annotation 12.5 plotly: Highlight time series across graphs 12.6 Highlight and annotate data and fit 12.7 Time series scatterplot animation", " Chapter 12 Interaction–annotate, highlight, link, and animate library(tidyverse) 12.1 ggiraph: Simple annotation tooltip: mouse-over tooltips display information when mouse is over elements. onclick: executes java script when elements are clicked. data_id: id to be associated with elements. Annotate details on hover library(ggiraph) mpg.plot = ggplot(mpg, aes( x = displ, y = cty, color = hwy))+ geom_point_interactive(aes(tooltip = model), size = 2) + labs(title = &quot;ggiraph: interactive plots&quot;) ggiraph(code = print(mpg.plot)) 12.2 ggiraph: Multi-plot linking with highlighting and annotation #devtools::install_github(&quot;thomasp85/patchwork&quot;) library(patchwork) # For combining multiple plots library(cowplot) mtcars.df &lt;- mtcars mtcars.df$tooltip &lt;- rownames(mtcars.df) theme_set(theme_minimal()) plot1 &lt;- ggplot(mtcars.df) + geom_point_interactive(aes(x = drat, y = wt, color = qsec, tooltip = tooltip, data_id = tooltip ), size = 2) plot2 &lt;- ggplot(mtcars.df) + geom_point_interactive(aes(x = qsec, y = disp, color = mpg, tooltip = tooltip, data_id = tooltip ), size = 2) girafe(code = print(plot1 + plot2)) 12.3 plotly: annotation Plotly supports filtering, highlighting, and linking views. To link views plotly uses SharedData class from crosstalk package as a key to link dataframes being plotted library(ggplot2) library(plotly) library(MESS) data(&quot;happiness&quot;) plot = ggplot(happiness, aes(x=tax, y=happy, color=continent, size=population, text = paste(&quot;country:&quot;, country))) + geom_point(alpha = .8) + scale_size_area(max_size = 30) + geom_smooth(aes(linetype = continent, group = continent), method=&quot;lm&quot;, se= F, size = 1 ) ggplotly(plot) 12.4 plotly: Map annotation library(plotly) library(sf) library(albersusa) us_laea &lt;- usa_sf(&quot;laea&quot;) us_laea = us_laea %&gt;% mutate(density_2014 = pop_2014/census_area) plot = ggplot(us_laea) + geom_sf(aes(fill = log(density_2014), text = paste(name, &quot;had a density of&quot;, round(density_2014, 0)))) ggplotly(plot, tooltip = &quot;text&quot;) %&gt;% style(hoverlabel = list(bgcolor = &quot;grey85&quot;), hoveron = &quot;fill&quot;) 12.5 plotly: Highlight time series across graphs Adapted from https://github.com/ropensci/plotly/tree/master/demo txhousing.sd &lt;- highlight_key(txhousing, ~year) plot = ggplot(txhousing.sd, aes(month, median)) + geom_line(aes(group = year)) + geom_smooth(data = txhousing, method = &quot;gam&quot;) + facet_wrap(~ city) + labs(title = &quot;Click on a line to highlight a year&quot;) ggplotly(plot, height = 800, width = 1600) ## Warning: Removed 616 rows containing non-finite values (stat_smooth). ## plotly: Linked plots Adapted from https://plotly-book.cpsievert.me/linking-views-without-shiny.html txhousing.sd &lt;- highlight_key(txhousing, ~city, &quot;Select a city&quot;) base &lt;- plot_ly(txhousing.sd, color = I(&quot;black&quot;), height = 400) %&gt;% group_by(city) plot1 &lt;- base %&gt;% summarise(miss = sum(is.na(median))) %&gt;% filter(miss &gt; 0) %&gt;% add_markers(x = ~miss, y = ~forcats::fct_reorder(city, miss), hoverinfo = &quot;x+y&quot;) %&gt;% layout( barmode = &quot;overlay&quot;, xaxis = list(title = &quot;Number of months missing&quot;), yaxis = list(title = &quot;&quot;) ) plot2 &lt;- base %&gt;% add_lines(x = ~date, y = ~median, alpha = 0.3) %&gt;% layout(xaxis = list(title = &quot;&quot;)) subplot(plot1, plot2, titleX = TRUE, widths = c(0.3, 0.7)) %&gt;% hide_legend() %&gt;% highlight(dynamic = TRUE, selectize = TRUE) 12.6 Highlight and annotate data and fit library(crosstalk) data(mpg) mpg.sd &lt;-highlight_key(mpg, ~new) mpg.sd &lt;- highlight_key(mpg, ~class) plot &lt;- ggplot(mpg.sd, aes(displ, hwy, colour = class)) + geom_point() + geom_smooth(se = FALSE, method = &quot;lm&quot;) ggplotly(plot) %&gt;% highlight(&quot;plotly_hover&quot;) 12.7 Time series scatterplot animation ids and frame specify the data elements for the animation and slider library(gapminder) data(gapminder) plot = ggplot(gapminder, aes(gdpPercap/1000, lifeExp, color = continent)) + geom_point(aes(size = pop, frame = year, ids = country)) + scale_x_log10() ggplotly(plot) "]
]
